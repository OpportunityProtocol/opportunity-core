{
  "contractName": "UserRegistration",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "civicID",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "universalAddress",
          "type": "string"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "civicID",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newUniversalAddress",
          "type": "address"
        }
      ],
      "name": "registerNewUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "civicID",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newUniversalAddress",
          "type": "address"
        }
      ],
      "name": "assignUniversalAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "civicID",
          "type": "string"
        }
      ],
      "name": "hasUniversalAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"civicID\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"universalAddress\",\"type\":\"string\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"civicID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newUniversalAddress\",\"type\":\"address\"}],\"name\":\"assignUniversalAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"civicID\",\"type\":\"string\"}],\"name\":\"hasUniversalAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"civicID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newUniversalAddress\",\"type\":\"address\"}],\"name\":\"registerNewUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"assignUniversalAddress(string,address)\":{\"params\":{\"civicID\":\"Hash returned from civic identity wallet\",\"newUniversalAddress\":\"Universal user address\"}},\"hasUniversalAddress(string)\":{\"params\":{\"civicID\":\"Hash returned from civic identity wallet\"},\"returns\":{\"_0\":\"bool based on if a user has a universal address or not.\"}},\"registerNewUser(string,address)\":{\"params\":{\"civicID\":\"Hash returned from civic identity wallet\",\"newUniversalAddress\":\"Universal user address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"assignUniversalAddress(string,address)\":{\"notice\":\"assignUniversalAddress Maps a users civic id to the universal address for the platform.\"},\"hasUniversalAddress(string)\":{\"notice\":\"hasUniversalAddress Returns Checks to see if a user has a universal address or not.\"},\"registerNewUser(string,address)\":{\"notice\":\"registerNewUser Registers a new user to the platform based on their civicID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserRegistration.sol\":\"UserRegistration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserRegistration.sol\":{\"keccak256\":\"0x8ae38b7f65278d62d7dc10f826d4d2088f2e95bc8550795c6274d2730ed4fe39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc8dfe88ea5333c88fbc95bdaadd0136d2066dbfbf1c22f6834e160406a86a28\",\"dweb:/ipfs/QmPDwUzxWTcRcaZ3NMae196WtdRT1p16EqbU94eZARZZNT\"]},\"/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserSummary.sol\":{\"keccak256\":\"0xd72f93ccf728a4e5f0eb9dd36fbf0a39360e43e89448f656e1a3e491a22e5bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e2cebdf21454a3a6255dd892fa98c9571e8baecb1c3d5cb4eb8d25f2a61fced\",\"dweb:/ipfs/QmXJ3B4KB8NNxfJQ972ZCZXpCnPZTGpE4VYaCkoXz2jvg3\"]},\"/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserSummaryFactory.sol\":{\"keccak256\":\"0x80a3c42332750040ef79ba3e21894228d8807c1ae3ff3f626f5f941f23f150c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e71fab4b0e0792ccc57e3920588e0d6601a455814b0cda8b44a7777e54c39b4\",\"dweb:/ipfs/QmVvad53cyoMWVHYqrzYjfsqLj8gnE37m4MHrK3bTfLGvi\"]},\"/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/interface/IUserSummary.sol\":{\"keccak256\":\"0x66e895b7e47b31a290a27b57cdb056dcd70c6fdffca249be6a6948ad7aff70d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a3af68fea97962640a7f4a5e9188e8d82f69701bc75024c3fa8d31cbd600a7c\",\"dweb:/ipfs/QmbWnp8HHmMCGsBZhY6FQ79JCteDgY4e2AK5KMPbsRRfDB\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506119f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637479601b14610046578063c7c83b7114610076578063d6372ab5146100a6575b600080fd5b610060600480360381019061005b9190610348565b6100d6565b60405161006d919061042c565b60405180910390f35b610090600480360381019061008b9190610348565b610196565b60405161009d919061042c565b60405180910390f35b6100c060048036038101906100bb9190610307565b610248565b6040516100cd919061042c565b60405180910390f35b6000806100e38484610196565b905060001515811515146100f657600080fd5b60006040516101049061027d565b604051809103906000f080158015610120573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16631e7ea431866040518263ffffffff1660e01b815260040161015c9190610447565b600060405180830381600087803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b50505050505092915050565b60008015156001846040516101ab9190610415565b908152602001604051809103902060009054906101000a900460ff161515146101d357600080fd5b6000151560011515146101e557600080fd5b816000846040516101f69190610415565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555092915050565b600060018260405161025a9190610415565b908152602001604051809103902060009054906101000a900460ff169050919050565b6113f7806105c983390190565b600061029d6102988461049a565b610469565b9050828152602081018484840111156102b557600080fd5b6102c084828561052f565b509392505050565b6000813590506102d7816105b1565b92915050565b600082601f8301126102ee57600080fd5b81356102fe84826020860161028a565b91505092915050565b60006020828403121561031957600080fd5b600082013567ffffffffffffffff81111561033357600080fd5b61033f848285016102dd565b91505092915050565b6000806040838503121561035b57600080fd5b600083013567ffffffffffffffff81111561037557600080fd5b610381858286016102dd565b9250506020610392858286016102c8565b9150509250929050565b6103a581610503565b82525050565b60006103b6826104ca565b6103c081856104d5565b93506103d081856020860161053e565b6103d9816105a0565b840191505092915050565b60006103ef826104ca565b6103f981856104e6565b935061040981856020860161053e565b80840191505092915050565b600061042182846103e4565b915081905092915050565b6000602082019050610441600083018461039c565b92915050565b6000602082019050818103600083015261046181846103ab565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156104905761048f610571565b5b8060405250919050565b600067ffffffffffffffff8211156104b5576104b4610571565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006104fc8261050f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561055c578082015181840152602081019050610541565b8381111561056b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105ba816104f1565b81146105c557600080fd5b5056fe608060405234801561001057600080fd5b506113d7806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c80631e7ea431146200003f5780636101579c146200005f575b600080fd5b6200005d6004803603810190620000579190620001fa565b62000081565b005b620000696200016e565b604051620000789190620002b5565b60405180910390f35b60008160405162000092906200017a565b6200009e919062000291565b604051809103906000f080158015620000bb573d6000803e3d6000fd5b5090506000805490508173ffffffffffffffffffffffffffffffffffffffff167f1762bfd94f025a6c436d21288b439881cfef6b3834e1b6197855c0211e04227b60405160405180910390a36000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008080549050905090565b610fbd80620003e583390190565b60006200019f620001998462000306565b620002d2565b905082815260208101848484011115620001b857600080fd5b620001c58482856200035f565b509392505050565b600082601f830112620001df57600080fd5b8135620001f184826020860162000188565b91505092915050565b6000602082840312156200020d57600080fd5b600082013567ffffffffffffffff8111156200022857600080fd5b6200023684828501620001cd565b91505092915050565b60006200024c8262000339565b62000258818562000344565b93506200026a8185602086016200036e565b6200027581620003d3565b840191505092915050565b6200028b8162000355565b82525050565b60006020820190508181036000830152620002ad81846200023f565b905092915050565b6000602082019050620002cc600083018462000280565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620002fc57620002fb620003a4565b5b8060405250919050565b600067ffffffffffffffff821115620003245762000323620003a4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156200038e57808201518184015260208101905062000371565b838111156200039e576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe60806040523480156200001157600080fd5b5060405162000fbd38038062000fbd8339818101604052810190620000379190620003eb565b600062000049620001ec60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508060019080519060200190620000ff929190620001f4565b506001600281905550600067ffffffffffffffff8111156200014a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156200017f57816020015b6060815260200190600190039081620001695790505b50600460000190805190602001906200019a92919062000285565b506040518060200160405280600081525060046001019080519060200190620001c5929190620001f4565b506000600460030160006101000a81548160ff021916908360ff1602179055505062000561565b600033905090565b8280546200020290620004cd565b90600052602060002090601f01602090048101928262000226576000855562000272565b82601f106200024157805160ff191683800117855562000272565b8280016001018555821562000272579182015b828111156200027157825182559160200191906001019062000254565b5b509050620002819190620002ec565b5090565b828054828255906000526020600020908101928215620002d9579160200282015b82811115620002d8578251829080519060200190620002c7929190620001f4565b5091602001919060010190620002a6565b5b509050620002e891906200030b565b5090565b5b8082111562000307576000816000905550600101620002ed565b5090565b5b808211156200032f576000818162000325919062000333565b506001016200030c565b5090565b5080546200034190620004cd565b6000825580601f1062000355575062000376565b601f016020900490600052602060002090810190620003759190620002ec565b5b50565b6000620003906200038a8462000464565b62000430565b905082815260208101848484011115620003a957600080fd5b620003b684828562000497565b509392505050565b600082601f830112620003d057600080fd5b8151620003e284826020860162000379565b91505092915050565b600060208284031215620003fe57600080fd5b600082015167ffffffffffffffff8111156200041957600080fd5b6200042784828501620003be565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156200045a576200045962000532565b5b8060405250919050565b600067ffffffffffffffff82111562000482576200048162000532565b5b601f19601f8301169050602081019050919050565b60005b83811015620004b75780820151818401526020810190506200049a565b83811115620004c7576000848401525b50505050565b60006002820490506001821680620004e657607f821691505b60208210811415620004fd57620004fc62000503565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a4c80620005716000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636f61c7441461005c578063715018a61461007d5780638da5cb5b14610087578063aae58b7d146100a5578063f2fde38b146100af575b600080fd5b6100646100cb565b604051610074949392919061081b565b60405180910390f35b6100856102ed565b005b61008f610427565b60405161009c9190610800565b60405180910390f35b6100ad610450565b005b6100c960048036038101906100c49190610618565b610452565b005b60608060606000600460000160046001016004600201600460030160009054906101000a900460ff1683805480602002602001604051908101604052809291908181526020016000905b828210156101c15783829060005260206000200180546101349061098d565b80601f01602080910402602001604051908101604052809291908181526020018280546101609061098d565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b505050505081526020019060010190610115565b5050505093508280546101d39061098d565b80601f01602080910402602001604051908101604052809291908181526020018280546101ff9061098d565b801561024c5780601f106102215761010080835404028352916020019161024c565b820191906000526020600020905b81548152906001019060200180831161022f57829003601f168201915b5050505050925081805461025f9061098d565b80601f016020809104026020016040519081016040528092919081815260200182805461028b9061098d565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b50505050509150935093509350935090919293565b6102f56105fb565b73ffffffffffffffffffffffffffffffffffffffff16610313610427565b73ffffffffffffffffffffffffffffffffffffffff1614610369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036090610895565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b61045a6105fb565b73ffffffffffffffffffffffffffffffffffffffff16610478610427565b73ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590610895565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610875565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610612816109ff565b92915050565b60006020828403121561062a57600080fd5b600061063884828501610603565b91505092915050565b600061064d83836106d9565b905092915050565b61065e8161091b565b82525050565b600061066f826108c5565b61067981856108e8565b93508360208202850161068b856108b5565b8060005b858110156106c757848403895281516106a88582610641565b94506106b3836108db565b925060208a0199505060018101905061068f565b50829750879550505050505092915050565b60006106e4826108d0565b6106ee81856108f9565b93506106fe81856020860161095a565b610707816109ee565b840191505092915050565b600061071d826108d0565b610727818561090a565b935061073781856020860161095a565b610740816109ee565b840191505092915050565b600061075860268361090a565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006107be60208361090a565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6107fa8161094d565b82525050565b60006020820190506108156000830184610655565b92915050565b600060808201905081810360008301526108358187610664565b905081810360208301526108498186610712565b9050818103604083015261085d8185610712565b905061086c60608301846107f1565b95945050505050565b6000602082019050818103600083015261088e8161074b565b9050919050565b600060208201905081810360008301526108ae816107b1565b9050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109268261092d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b60005b8381101561097857808201518184015260208101905061095d565b83811115610987576000848401525b50505050565b600060028204905060018216806109a557607f821691505b602082108114156109b9576109b86109bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610a088161091b565b8114610a1357600080fd5b5056fea264697066735822122093c50b4872f7c6f50e31e3f36d75e8e630f29143e50b6288dce8e33f36c8e7de64736f6c63430008000033a2646970667358221220a1e6842f5f919f979434d07553f5eb730d3a2e4ed52ca4050c89c773f2d02d3664736f6c63430008000033a264697066735822122008b7f0b331c1acd503d3615e4295cae5b507ae286b9bfb2efcb4e3f36020b4bc64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80637479601b14610046578063c7c83b7114610076578063d6372ab5146100a6575b600080fd5b610060600480360381019061005b9190610348565b6100d6565b60405161006d919061042c565b60405180910390f35b610090600480360381019061008b9190610348565b610196565b60405161009d919061042c565b60405180910390f35b6100c060048036038101906100bb9190610307565b610248565b6040516100cd919061042c565b60405180910390f35b6000806100e38484610196565b905060001515811515146100f657600080fd5b60006040516101049061027d565b604051809103906000f080158015610120573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16631e7ea431866040518263ffffffff1660e01b815260040161015c9190610447565b600060405180830381600087803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b50505050505092915050565b60008015156001846040516101ab9190610415565b908152602001604051809103902060009054906101000a900460ff161515146101d357600080fd5b6000151560011515146101e557600080fd5b816000846040516101f69190610415565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555092915050565b600060018260405161025a9190610415565b908152602001604051809103902060009054906101000a900460ff169050919050565b6113f7806105c983390190565b600061029d6102988461049a565b610469565b9050828152602081018484840111156102b557600080fd5b6102c084828561052f565b509392505050565b6000813590506102d7816105b1565b92915050565b600082601f8301126102ee57600080fd5b81356102fe84826020860161028a565b91505092915050565b60006020828403121561031957600080fd5b600082013567ffffffffffffffff81111561033357600080fd5b61033f848285016102dd565b91505092915050565b6000806040838503121561035b57600080fd5b600083013567ffffffffffffffff81111561037557600080fd5b610381858286016102dd565b9250506020610392858286016102c8565b9150509250929050565b6103a581610503565b82525050565b60006103b6826104ca565b6103c081856104d5565b93506103d081856020860161053e565b6103d9816105a0565b840191505092915050565b60006103ef826104ca565b6103f981856104e6565b935061040981856020860161053e565b80840191505092915050565b600061042182846103e4565b915081905092915050565b6000602082019050610441600083018461039c565b92915050565b6000602082019050818103600083015261046181846103ab565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156104905761048f610571565b5b8060405250919050565b600067ffffffffffffffff8211156104b5576104b4610571565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006104fc8261050f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561055c578082015181840152602081019050610541565b8381111561056b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105ba816104f1565b81146105c557600080fd5b5056fe608060405234801561001057600080fd5b506113d7806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c80631e7ea431146200003f5780636101579c146200005f575b600080fd5b6200005d6004803603810190620000579190620001fa565b62000081565b005b620000696200016e565b604051620000789190620002b5565b60405180910390f35b60008160405162000092906200017a565b6200009e919062000291565b604051809103906000f080158015620000bb573d6000803e3d6000fd5b5090506000805490508173ffffffffffffffffffffffffffffffffffffffff167f1762bfd94f025a6c436d21288b439881cfef6b3834e1b6197855c0211e04227b60405160405180910390a36000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008080549050905090565b610fbd80620003e583390190565b60006200019f620001998462000306565b620002d2565b905082815260208101848484011115620001b857600080fd5b620001c58482856200035f565b509392505050565b600082601f830112620001df57600080fd5b8135620001f184826020860162000188565b91505092915050565b6000602082840312156200020d57600080fd5b600082013567ffffffffffffffff8111156200022857600080fd5b6200023684828501620001cd565b91505092915050565b60006200024c8262000339565b62000258818562000344565b93506200026a8185602086016200036e565b6200027581620003d3565b840191505092915050565b6200028b8162000355565b82525050565b60006020820190508181036000830152620002ad81846200023f565b905092915050565b6000602082019050620002cc600083018462000280565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620002fc57620002fb620003a4565b5b8060405250919050565b600067ffffffffffffffff821115620003245762000323620003a4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156200038e57808201518184015260208101905062000371565b838111156200039e576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe60806040523480156200001157600080fd5b5060405162000fbd38038062000fbd8339818101604052810190620000379190620003eb565b600062000049620001ec60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508060019080519060200190620000ff929190620001f4565b506001600281905550600067ffffffffffffffff8111156200014a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156200017f57816020015b6060815260200190600190039081620001695790505b50600460000190805190602001906200019a92919062000285565b506040518060200160405280600081525060046001019080519060200190620001c5929190620001f4565b506000600460030160006101000a81548160ff021916908360ff1602179055505062000561565b600033905090565b8280546200020290620004cd565b90600052602060002090601f01602090048101928262000226576000855562000272565b82601f106200024157805160ff191683800117855562000272565b8280016001018555821562000272579182015b828111156200027157825182559160200191906001019062000254565b5b509050620002819190620002ec565b5090565b828054828255906000526020600020908101928215620002d9579160200282015b82811115620002d8578251829080519060200190620002c7929190620001f4565b5091602001919060010190620002a6565b5b509050620002e891906200030b565b5090565b5b8082111562000307576000816000905550600101620002ed565b5090565b5b808211156200032f576000818162000325919062000333565b506001016200030c565b5090565b5080546200034190620004cd565b6000825580601f1062000355575062000376565b601f016020900490600052602060002090810190620003759190620002ec565b5b50565b6000620003906200038a8462000464565b62000430565b905082815260208101848484011115620003a957600080fd5b620003b684828562000497565b509392505050565b600082601f830112620003d057600080fd5b8151620003e284826020860162000379565b91505092915050565b600060208284031215620003fe57600080fd5b600082015167ffffffffffffffff8111156200041957600080fd5b6200042784828501620003be565b91505092915050565b6000604051905081810181811067ffffffffffffffff821117156200045a576200045962000532565b5b8060405250919050565b600067ffffffffffffffff82111562000482576200048162000532565b5b601f19601f8301169050602081019050919050565b60005b83811015620004b75780820151818401526020810190506200049a565b83811115620004c7576000848401525b50505050565b60006002820490506001821680620004e657607f821691505b60208210811415620004fd57620004fc62000503565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a4c80620005716000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636f61c7441461005c578063715018a61461007d5780638da5cb5b14610087578063aae58b7d146100a5578063f2fde38b146100af575b600080fd5b6100646100cb565b604051610074949392919061081b565b60405180910390f35b6100856102ed565b005b61008f610427565b60405161009c9190610800565b60405180910390f35b6100ad610450565b005b6100c960048036038101906100c49190610618565b610452565b005b60608060606000600460000160046001016004600201600460030160009054906101000a900460ff1683805480602002602001604051908101604052809291908181526020016000905b828210156101c15783829060005260206000200180546101349061098d565b80601f01602080910402602001604051908101604052809291908181526020018280546101609061098d565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b505050505081526020019060010190610115565b5050505093508280546101d39061098d565b80601f01602080910402602001604051908101604052809291908181526020018280546101ff9061098d565b801561024c5780601f106102215761010080835404028352916020019161024c565b820191906000526020600020905b81548152906001019060200180831161022f57829003601f168201915b5050505050925081805461025f9061098d565b80601f016020809104026020016040519081016040528092919081815260200182805461028b9061098d565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b50505050509150935093509350935090919293565b6102f56105fb565b73ffffffffffffffffffffffffffffffffffffffff16610313610427565b73ffffffffffffffffffffffffffffffffffffffff1614610369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036090610895565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b61045a6105fb565b73ffffffffffffffffffffffffffffffffffffffff16610478610427565b73ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590610895565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610875565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610612816109ff565b92915050565b60006020828403121561062a57600080fd5b600061063884828501610603565b91505092915050565b600061064d83836106d9565b905092915050565b61065e8161091b565b82525050565b600061066f826108c5565b61067981856108e8565b93508360208202850161068b856108b5565b8060005b858110156106c757848403895281516106a88582610641565b94506106b3836108db565b925060208a0199505060018101905061068f565b50829750879550505050505092915050565b60006106e4826108d0565b6106ee81856108f9565b93506106fe81856020860161095a565b610707816109ee565b840191505092915050565b600061071d826108d0565b610727818561090a565b935061073781856020860161095a565b610740816109ee565b840191505092915050565b600061075860268361090a565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006107be60208361090a565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6107fa8161094d565b82525050565b60006020820190506108156000830184610655565b92915050565b600060808201905081810360008301526108358187610664565b905081810360208301526108498186610712565b9050818103604083015261085d8185610712565b905061086c60608301846107f1565b95945050505050565b6000602082019050818103600083015261088e8161074b565b9050919050565b600060208201905081810360008301526108ae816107b1565b9050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006109268261092d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b60005b8381101561097857808201518184015260208101905061095d565b83811115610987576000848401525b50505050565b600060028204905060018216806109a557607f821691505b602082108114156109b9576109b86109bf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610a088161091b565b8114610a1357600080fd5b5056fea264697066735822122093c50b4872f7c6f50e31e3f36d75e8e630f29143e50b6288dce8e33f36c8e7de64736f6c63430008000033a2646970667358221220a1e6842f5f919f979434d07553f5eb730d3a2e4ed52ca4050c89c773f2d02d3664736f6c63430008000033a264697066735822122008b7f0b331c1acd503d3615e4295cae5b507ae286b9bfb2efcb4e3f36020b4bc64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5669:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:11"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:11"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:11"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:11"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:11"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:11",
                "type": ""
              }
            ],
            "src": "7:344:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:11",
                "type": ""
              }
            ],
            "src": "357:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:11",
                "type": ""
              }
            ],
            "src": "516:273:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "871:299:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "917:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "926:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "929:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "919:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "919:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "919:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "892:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "901:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "888:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "888:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "913:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "884:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "881:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "943:220:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "958:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "989:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1000:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "985:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "985:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "972:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "972:31:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "962:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1050:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1059:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1062:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1052:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1052:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1052:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1022:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1030:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1019:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1019:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1016:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1080:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1090:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1080:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "841:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "852:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "864:6:11",
                "type": ""
              }
            ],
            "src": "795:375:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1269:427:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1315:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1324:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1327:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1317:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1317:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1317:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1290:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1299:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1286:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1311:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1282:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1279:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1341:220:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1356:45:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1387:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1398:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1383:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1383:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1370:12:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:31:11"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1360:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1448:16:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1457:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1460:1:11",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1450:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1450:12:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1450:12:11"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1420:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1428:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1417:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1417:30:11"
                      },
                      "nodeType": "YulIf",
                      "src": "1414:2:11"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1478:73:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1523:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1534:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1519:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1519:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1543:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1488:30:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1488:63:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1478:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1571:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1586:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1600:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1590:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1616:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1651:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1662:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1647:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1647:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1671:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1626:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1626:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1616:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1231:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1242:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1254:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1262:6:11",
                "type": ""
              }
            ],
            "src": "1176:520:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1761:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1778:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1798:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1783:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1771:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1771:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1771:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1749:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1756:3:11",
                "type": ""
              }
            ],
            "src": "1702:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1909:272:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1919:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1966:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1933:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1933:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1923:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1981:78:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2047:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2052:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1988:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1988:71:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1981:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2094:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2090:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2090:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2108:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2113:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2068:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2068:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2129:46:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2140:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2167:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2145:21:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2136:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2136:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2129:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1890:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1897:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1905:3:11",
                "type": ""
              }
            ],
            "src": "1817:364:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2297:267:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2307:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2354:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2321:32:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:39:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2311:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2369:96:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2453:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2458:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2376:76:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2376:89:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2369:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2500:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2507:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2496:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2496:16:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2514:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2519:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2474:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2474:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2474:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2535:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2546:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2551:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2542:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2535:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2278:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2285:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2293:3:11",
                "type": ""
              }
            ],
            "src": "2187:377:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2706:139:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2717:102:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2806:6:11"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2815:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2724:81:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2724:95:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2717:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2829:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2836:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2829:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2685:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2691:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2702:3:11",
                "type": ""
              }
            ],
            "src": "2570:275:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2943:118:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2953:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2965:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2976:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2961:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2953:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3027:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3040:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3051:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3036:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2989:37:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2989:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2989:65:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2915:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2927:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2938:4:11",
                "type": ""
              }
            ],
            "src": "2851:210:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3185:195:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3195:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3207:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3218:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3203:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3203:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3195:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3242:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3253:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3238:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3238:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3261:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3267:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3257:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3257:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3287:86:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3359:6:11"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3368:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3295:63:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3295:78:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3287:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3157:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3169:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3180:4:11",
                "type": ""
              }
            ],
            "src": "3067:313:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3426:243:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3436:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3452:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3446:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3446:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "3436:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3464:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3486:6:11"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "3494:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3482:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3482:17:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3468:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3610:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3612:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3612:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3612:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3553:10:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3565:18:11",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3550:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3550:34:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3589:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3601:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3586:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3586:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3547:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:62:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3544:2:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3648:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3652:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3641:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3641:22:11"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3410:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3419:6:11",
                "type": ""
              }
            ],
            "src": "3386:283:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3742:265:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3847:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3849:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3849:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3849:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3819:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3827:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3816:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3813:2:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3899:41:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3915:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3923:4:11",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3911:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3911:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3934:4:11",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3930:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3930:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3907:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:33:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "3899:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3977:23:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "3989:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3995:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3985:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "3977:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3726:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "3737:4:11",
                "type": ""
              }
            ],
            "src": "3675:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4072:40:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4083:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4099:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4093:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4093:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4083:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4055:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4065:6:11",
                "type": ""
              }
            ],
            "src": "4013:99:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4214:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4231:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4236:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4224:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4224:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4252:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4271:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4276:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4267:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4267:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4252:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4186:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4191:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4202:11:11",
                "type": ""
              }
            ],
            "src": "4118:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4407:34:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4417:18:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4432:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4417:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4379:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4384:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4395:11:11",
                "type": ""
              }
            ],
            "src": "4293:148:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4492:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4502:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4531:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4513:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4502:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4474:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4484:7:11",
                "type": ""
              }
            ],
            "src": "4447:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4591:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4601:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4626:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4619:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4619:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4612:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4612:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4601:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4573:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4583:7:11",
                "type": ""
              }
            ],
            "src": "4549:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4690:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4700:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4715:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4722:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4711:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4711:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4700:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4672:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4682:7:11",
                "type": ""
              }
            ],
            "src": "4645:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4828:103:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "4851:3:11"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "4856:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4861:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4838:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4838:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4838:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "4909:3:11"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4914:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4905:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4905:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4923:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4898:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4898:27:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4898:27:11"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4810:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4815:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4820:6:11",
                "type": ""
              }
            ],
            "src": "4777:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:258:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4996:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5005:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5000:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5065:63:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5090:3:11"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5095:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5086:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5086:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5109:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5114:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5105:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5105:11:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5099:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5099:18:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5079:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5079:39:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5079:39:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5026:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5029:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5023:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5023:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5037:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5039:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5048:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5051:2:11",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5044:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5044:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5039:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5019:3:11",
                    "statements": []
                  },
                  "src": "5015:113:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5162:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5212:3:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5217:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5208:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5208:16:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5226:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5201:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5201:27:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5201:27:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5143:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5146:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5140:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5137:2:11"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "4968:3:11",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "4973:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4978:6:11",
                "type": ""
              }
            ],
            "src": "4937:307:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5278:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5295:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5298:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5288:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5288:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5288:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5392:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5395:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5385:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5385:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5385:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5416:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5419:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5409:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5409:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5409:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5250:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5484:54:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5494:38:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5512:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5519:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5508:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5508:14:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5528:2:11",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5524:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5524:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5504:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:28:11"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "5494:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5467:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "5477:6:11",
                "type": ""
              }
            ],
            "src": "5436:102:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5587:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5644:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5653:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5656:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5646:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5646:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5646:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5610:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5635:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5617:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5617:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5607:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5607:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5600:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5600:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5597:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5580:5:11",
                "type": ""
              }
            ],
            "src": "5544:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "94:2015:5:-:0;;;388:16;;;;;;;;;;94:2015;;;;;;",
  "deployedSourceMap": "94:2015:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1260:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1976:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;638:378;730:4;746:38;787:52;810:7;819:19;787:22;:52::i;:::-;746:93;;894:5;857:42;;:33;:42;;;849:51;;;;;;911:26;940:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;911:53;;974:7;:25;;;1000:7;974:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:378;;;;;;:::o;1260:462::-;1359:4;1487:5;1454:38;;:20;1475:7;1454:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:38;;;1446:47;;;;;;1587:5;1579:13;;:4;:13;;;1571:22;;;;;;1695:19;1666:17;1684:7;1666:26;;;;;;:::i;:::-;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;1260:462;;;;:::o;1976:131::-;2048:4;2071:20;2092:7;2071:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2064:36;;1976:131;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:344:11:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;795:375::-;;913:2;901:9;892:7;888:23;884:32;881:2;;;929:1;926;919:12;881:2;1000:1;989:9;985:17;972:31;1030:18;1022:6;1019:30;1016:2;;;1062:1;1059;1052:12;1016:2;1090:63;1145:7;1136:6;1125:9;1121:22;1090:63;:::i;:::-;1080:73;;943:220;871:299;;;;:::o;1176:520::-;;;1311:2;1299:9;1290:7;1286:23;1282:32;1279:2;;;1327:1;1324;1317:12;1279:2;1398:1;1387:9;1383:17;1370:31;1428:18;1420:6;1417:30;1414:2;;;1460:1;1457;1450:12;1414:2;1488:63;1543:7;1534:6;1523:9;1519:22;1488:63;:::i;:::-;1478:73;;1341:220;1600:2;1626:53;1671:7;1662:6;1651:9;1647:22;1626:53;:::i;:::-;1616:63;;1571:118;1269:427;;;;;:::o;1702:109::-;1783:21;1798:5;1783:21;:::i;:::-;1778:3;1771:34;1761:50;;:::o;1817:364::-;;1933:39;1966:5;1933:39;:::i;:::-;1988:71;2052:6;2047:3;1988:71;:::i;:::-;1981:78;;2068:52;2113:6;2108:3;2101:4;2094:5;2090:16;2068:52;:::i;:::-;2145:29;2167:6;2145:29;:::i;:::-;2140:3;2136:39;2129:46;;1909:272;;;;;:::o;2187:377::-;;2321:39;2354:5;2321:39;:::i;:::-;2376:89;2458:6;2453:3;2376:89;:::i;:::-;2369:96;;2474:52;2519:6;2514:3;2507:4;2500:5;2496:16;2474:52;:::i;:::-;2551:6;2546:3;2542:16;2535:23;;2297:267;;;;;:::o;2570:275::-;;2724:95;2815:3;2806:6;2724:95;:::i;:::-;2717:102;;2836:3;2829:10;;2706:139;;;;:::o;2851:210::-;;2976:2;2965:9;2961:18;2953:26;;2989:65;3051:1;3040:9;3036:17;3027:6;2989:65;:::i;:::-;2943:118;;;;:::o;3067:313::-;;3218:2;3207:9;3203:18;3195:26;;3267:9;3261:4;3257:20;3253:1;3242:9;3238:17;3231:47;3295:78;3368:4;3359:6;3295:78;:::i;:::-;3287:86;;3185:195;;;;:::o;3386:283::-;;3452:2;3446:9;3436:19;;3494:4;3486:6;3482:17;3601:6;3589:10;3586:22;3565:18;3553:10;3550:34;3547:62;3544:2;;;3612:18;;:::i;:::-;3544:2;3652:10;3648:2;3641:22;3426:243;;;;:::o;3675:332::-;;3827:18;3819:6;3816:30;3813:2;;;3849:18;;:::i;:::-;3813:2;3934:4;3930:9;3923:4;3915:6;3911:17;3907:33;3899:41;;3995:4;3989;3985:15;3977:23;;3742:265;;;:::o;4013:99::-;;4099:5;4093:12;4083:22;;4072:40;;;:::o;4118:169::-;;4236:6;4231:3;4224:19;4276:4;4271:3;4267:14;4252:29;;4214:73;;;;:::o;4293:148::-;;4432:3;4417:18;;4407:34;;;;:::o;4447:96::-;;4513:24;4531:5;4513:24;:::i;:::-;4502:35;;4492:51;;;:::o;4549:90::-;;4626:5;4619:13;4612:21;4601:32;;4591:48;;;:::o;4645:126::-;;4722:42;4715:5;4711:54;4700:65;;4690:81;;;:::o;4777:154::-;4861:6;4856:3;4851;4838:30;4923:1;4914:6;4909:3;4905:16;4898:27;4828:103;;;:::o;4937:307::-;5005:1;5015:113;5029:6;5026:1;5023:13;5015:113;;;5114:1;5109:3;5105:11;5099:18;5095:1;5090:3;5086:11;5079:39;5051:2;5048:1;5044:10;5039:15;;5015:113;;;5146:6;5143:1;5140:13;5137:2;;;5226:1;5217:6;5212:3;5208:16;5201:27;5137:2;4986:258;;;;:::o;5250:180::-;5298:77;5295:1;5288:88;5395:4;5392:1;5385:15;5419:4;5416:1;5409:15;5436:102;;5528:2;5524:7;5519:2;5512:5;5508:14;5504:28;5494:38;;5484:54;;;:::o;5544:122::-;5617:24;5635:5;5617:24;:::i;:::-;5610:5;5607:35;5597:2;;5656:1;5653;5646:12;5597:2;5587:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./UserSummaryFactory.sol\";\n\ncontract UserRegistration {\n\n    //maps a civic address to a universal generated address\n    mapping(string => address) private _universalAddress;\n    mapping(string => bool) private _hasUniversalAddress;\n\n    event UserRegistered(string indexed civicID, string indexed universalAddress);\n\n    constructor() {}\n\n    /**\n     * registerNewUser\n     * Registers a new user to the platform based on their civicID.\n     * @param civicID Hash returned from civic identity wallet\n     * @param newUniversalAddress Universal user address\n     */\n     function registerNewUser(string memory civicID, address newUniversalAddress) public returns(bool) {\n        bool hasAssignedUniversalAddressResult = assignUniversalAddress(civicID, newUniversalAddress);\n        require(hasAssignedUniversalAddressResult == false);\n\n        UserSummaryFactory factory = new UserSummaryFactory();\n        factory.createUserSummary(civicID);\n     }\n\n    /**\n     * assignUniversalAddress\n     * Maps a users civic id to the universal address for the platform.\n     * @param civicID Hash returned from civic identity wallet\n     * @param newUniversalAddress Universal user address\n     */\n    function assignUniversalAddress(string memory civicID, address newUniversalAddress) public returns(bool) {\n        //require this address not to already have a universal address\n        require(_hasUniversalAddress[civicID] == false);\n        //require there to not be a universal address at this index\n        require(true == false);\n\n        //assign the civic address to a new universal address\n        _universalAddress[civicID] = newUniversalAddress; \n    }\n\n    /**\n     * hasUniversalAddress\n     * Returns Checks to see if a user has a universal address or not.\n     * @param civicID Hash returned from civic identity wallet\n     * @return bool based on if a user has a universal address or not.\n     */\n    function hasUniversalAddress(string memory civicID) public view returns(bool) {\n        return _hasUniversalAddress[civicID];\n    }\n}",
  "sourcePath": "/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserRegistration.sol",
  "ast": {
    "absolutePath": "/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserRegistration.sol",
    "exportedSymbols": {
      "Context": [
        458
      ],
      "IUserSummary": [
        325
      ],
      "Ownable": [
        435
      ],
      "UserRegistration": [
        144
      ],
      "UserSummary": [
        232
      ],
      "UserSummaryFactory": [
        288
      ]
    },
    "id": 145,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 42,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserSummaryFactory.sol",
        "file": "./UserSummaryFactory.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 289,
        "src": "58:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          288
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144
        ],
        "name": "UserRegistration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "_universalAddress",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "187:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "195:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "187:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "205:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "_hasUniversalAddress",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "245:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "253:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "245:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 49,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "263:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "UserRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "325:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "universalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "349:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:57:5"
            },
            "src": "304:78:5"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "402:2:5",
              "statements": []
            },
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:2:5"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:5"
            },
            "scope": 144,
            "src": "388:16:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "736:280:5",
              "statements": [
                {
                  "assignments": [
                    72
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "hasAssignedUniversalAddressResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "746:38:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "746:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "810:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 75,
                        "name": "newUniversalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "819:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73,
                      "name": "assignUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "787:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (string memory,address) returns (bool)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:93:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "hasAssignedUniversalAddressResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "857:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "894:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "857:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "849:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "849:51:5"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "911:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                        "typeString": "contract UserSummaryFactory"
                      },
                      "typeName": {
                        "id": 85,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84,
                          "name": "UserSummaryFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 288,
                          "src": "911:18:5"
                        },
                        "referencedDeclaration": 288,
                        "src": "911:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "940:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserSummaryFactory_$288_$",
                        "typeString": "function () returns (contract UserSummaryFactory)"
                      },
                      "typeName": {
                        "id": 88,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87,
                          "name": "UserSummaryFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 288,
                          "src": "944:18:5"
                        },
                        "referencedDeclaration": 288,
                        "src": "944:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                      "typeString": "contract UserSummaryFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "911:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1000:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "974:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createUserSummary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 278,
                      "src": "974:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "974:34:5"
                }
              ]
            },
            "documentation": {
              "id": 62,
              "nodeType": "StructuredDocumentation",
              "src": "410:222:5",
              "text": " registerNewUser\n Registers a new user to the platform based on their civicID.\n @param civicID Hash returned from civic identity wallet\n @param newUniversalAddress Universal user address"
            },
            "functionSelector": "7479601b",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerNewUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "663:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "newUniversalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "686:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:52:5"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "730:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:6:5"
            },
            "scope": 144,
            "src": "638:378:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1365:357:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 110,
                            "name": "_hasUniversalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1454:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "id": 111,
                            "name": "civicID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1475:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1454:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1487:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1454:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1446:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1579:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1587:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1579:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1571:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:22:5"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 123,
                        "name": "_universalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1666:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 125,
                      "indexExpression": {
                        "id": 124,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1684:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1666:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 126,
                      "name": "newUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1695:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1666:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:48:5"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1022:233:5",
              "text": " assignUniversalAddress\n Maps a users civic id to the universal address for the platform.\n @param civicID Hash returned from civic identity wallet\n @param newUniversalAddress Universal user address"
            },
            "functionSelector": "c7c83b71",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignUniversalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1292:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "newUniversalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1315:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1291:52:5"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1359:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:6:5"
            },
            "scope": 144,
            "src": "1260:462:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2054:53:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 138,
                      "name": "_hasUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2071:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 140,
                    "indexExpression": {
                      "id": 139,
                      "name": "civicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "2092:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2071:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "2064:36:5"
                }
              ]
            },
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "1728:243:5",
              "text": " hasUniversalAddress\n Returns Checks to see if a user has a universal address or not.\n @param civicID Hash returned from civic identity wallet\n @return bool based on if a user has a universal address or not."
            },
            "functionSelector": "d6372ab5",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasUniversalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2005:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:23:5"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2048:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2047:6:5"
            },
            "scope": 144,
            "src": "1976:131:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "94:2015:5"
      }
    ],
    "src": "33:2076:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserRegistration.sol",
    "exportedSymbols": {
      "Context": [
        458
      ],
      "IUserSummary": [
        325
      ],
      "Ownable": [
        435
      ],
      "UserRegistration": [
        144
      ],
      "UserSummary": [
        232
      ],
      "UserSummaryFactory": [
        288
      ]
    },
    "id": 145,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 42,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:5"
      },
      {
        "absolutePath": "/Users/elijahhampton/Desktop/opportunity-core/src/contracts/user/UserSummaryFactory.sol",
        "file": "./UserSummaryFactory.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 289,
        "src": "58:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          288
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144
        ],
        "name": "UserRegistration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "_universalAddress",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "187:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "195:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "187:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "205:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "_hasUniversalAddress",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "245:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "253:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "245:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 49,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "263:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 57,
            "name": "UserRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "325:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "universalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "349:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:57:5"
            },
            "src": "304:78:5"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "402:2:5",
              "statements": []
            },
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:2:5"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:0:5"
            },
            "scope": 144,
            "src": "388:16:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 98,
              "nodeType": "Block",
              "src": "736:280:5",
              "statements": [
                {
                  "assignments": [
                    72
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 72,
                      "mutability": "mutable",
                      "name": "hasAssignedUniversalAddressResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "746:38:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "746:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "810:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 75,
                        "name": "newUniversalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "819:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73,
                      "name": "assignUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "787:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (string memory,address) returns (bool)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:93:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 79,
                          "name": "hasAssignedUniversalAddressResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "857:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "894:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "857:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "849:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "849:51:5"
                },
                {
                  "assignments": [
                    86
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "scope": 98,
                      "src": "911:26:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                        "typeString": "contract UserSummaryFactory"
                      },
                      "typeName": {
                        "id": 85,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84,
                          "name": "UserSummaryFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 288,
                          "src": "911:18:5"
                        },
                        "referencedDeclaration": 288,
                        "src": "911:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "940:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UserSummaryFactory_$288_$",
                        "typeString": "function () returns (contract UserSummaryFactory)"
                      },
                      "typeName": {
                        "id": 88,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87,
                          "name": "UserSummaryFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 288,
                          "src": "944:18:5"
                        },
                        "referencedDeclaration": 288,
                        "src": "944:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                      "typeString": "contract UserSummaryFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "911:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1000:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "974:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserSummaryFactory_$288",
                          "typeString": "contract UserSummaryFactory"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createUserSummary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 278,
                      "src": "974:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "974:34:5"
                }
              ]
            },
            "documentation": {
              "id": 62,
              "nodeType": "StructuredDocumentation",
              "src": "410:222:5",
              "text": " registerNewUser\n Registers a new user to the platform based on their civicID.\n @param civicID Hash returned from civic identity wallet\n @param newUniversalAddress Universal user address"
            },
            "functionSelector": "7479601b",
            "id": 99,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerNewUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "663:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "newUniversalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "686:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:52:5"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "730:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:6:5"
            },
            "scope": 144,
            "src": "638:378:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "1365:357:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 110,
                            "name": "_hasUniversalAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1454:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "id": 111,
                            "name": "civicID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1475:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1454:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1487:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1454:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1446:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "74727565",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1579:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1587:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1579:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1571:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:22:5"
                },
                {
                  "expression": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 123,
                        "name": "_universalAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1666:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 125,
                      "indexExpression": {
                        "id": 124,
                        "name": "civicID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1684:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1666:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 126,
                      "name": "newUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "1695:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1666:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:48:5"
                }
              ]
            },
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "1022:233:5",
              "text": " assignUniversalAddress\n Maps a users civic id to the universal address for the platform.\n @param civicID Hash returned from civic identity wallet\n @param newUniversalAddress Universal user address"
            },
            "functionSelector": "c7c83b71",
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignUniversalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1292:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1292:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "newUniversalAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1315:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1291:52:5"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1359:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:6:5"
            },
            "scope": 144,
            "src": "1260:462:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2054:53:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 138,
                      "name": "_hasUniversalAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "2071:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 140,
                    "indexExpression": {
                      "id": 139,
                      "name": "civicID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "2092:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2071:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 137,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "2064:36:5"
                }
              ]
            },
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "1728:243:5",
              "text": " hasUniversalAddress\n Returns Checks to see if a user has a universal address or not.\n @param civicID Hash returned from civic identity wallet\n @return bool based on if a user has a universal address or not."
            },
            "functionSelector": "d6372ab5",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasUniversalAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "civicID",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2005:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:23:5"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2048:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2047:6:5"
            },
            "scope": 144,
            "src": "1976:131:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 145,
        "src": "94:2015:5"
      }
    ],
    "src": "33:2076:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-16T23:33:25.658Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "assignUniversalAddress(string,address)": {
        "params": {
          "civicID": "Hash returned from civic identity wallet",
          "newUniversalAddress": "Universal user address"
        }
      },
      "hasUniversalAddress(string)": {
        "params": {
          "civicID": "Hash returned from civic identity wallet"
        },
        "returns": {
          "_0": "bool based on if a user has a universal address or not."
        }
      },
      "registerNewUser(string,address)": {
        "params": {
          "civicID": "Hash returned from civic identity wallet",
          "newUniversalAddress": "Universal user address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "assignUniversalAddress(string,address)": {
        "notice": "assignUniversalAddress Maps a users civic id to the universal address for the platform."
      },
      "hasUniversalAddress(string)": {
        "notice": "hasUniversalAddress Returns Checks to see if a user has a universal address or not."
      },
      "registerNewUser(string,address)": {
        "notice": "registerNewUser Registers a new user to the platform based on their civicID."
      }
    },
    "version": 1
  }
}